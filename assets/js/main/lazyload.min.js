document.addEventListener("DOMContentLoaded",function(){const e=document.querySelectorAll("img.lazy"),n=document.querySelectorAll(".lazy-background");if("IntersectionObserver"in window){let t=new IntersectionObserver(function(e,n){e.forEach(function(e){if(e.isIntersecting){let n=e.target;n.src=n.dataset.src,n.onload=(()=>n.classList.remove("lazy")),t.unobserve(n)}})});e.forEach(function(e){t.observe(e)});let o=new IntersectionObserver(function(e,n){e.forEach(function(e){if(e.isIntersecting){let n=e.target;n.style.backgroundImage=`url('${n.dataset.bg}')`,o.unobserve(n)}})});n.forEach(function(e){o.observe(e)})}else{const t=function(){e.forEach(function(e){e.getBoundingClientRect().top<window.innerHeight&&e.getBoundingClientRect().bottom>0&&"none"!==getComputedStyle(e).display&&(e.src=e.dataset.src,e.onload=(()=>e.classList.remove("lazy")))}),n.forEach(function(e){e.getBoundingClientRect().top<window.innerHeight&&e.getBoundingClientRect().bottom>0&&"none"!==getComputedStyle(e).display&&(e.style.backgroundImage=`url('${e.dataset.bg}')`)}),0==e.length&&0==n.length&&(document.removeEventListener("scroll",t),window.removeEventListener("resize",t),window.removeEventListener("orientationchange",t))};document.addEventListener("scroll",t),window.addEventListener("resize",t),window.addEventListener("orientationchange",t),t()}});